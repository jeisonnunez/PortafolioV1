DISPARO Y ANIMACION

.DATA 1000H 
cod7sg: 	DB 77H, 44H, 3EH, 6EH, 4DH, 6BH, 79H, 46H, 7FH, 4FH
ciclo: 	DB 01H, 02H, 04H, 40H, 20H, 10H
posicion:	DB 00H
desplaza:	DB 01H
bala: 	DB 08H

;--------------------------------
;Programa principal
;--------------------------------

.ORG 100H; en las direcciones 0 y 100 están las direcciones de las interrupciones
inicio:	EI		; habilita interrupciones
		JMP inicio	; se debe volver a habilitar las interrupciones, de otra forma no podran ser usadas de nuevo
		HLT

;--------------------------------
;Rutina de mostrar informacion
;--------------------------------
mostrar:	PUSH PSW	
		PUSH H
		LDA posicion; carga posicion en la que se encuentra actualmente
		INR A
		CPI 06H	; compara que no haya llegado a 6
		JNZ nocero
		MVI A, 0H	; resetea a 0
nocero:	STA posicion
		LXI H, ciclo
		ADD L		; suma posicion a L
		MOV L, A
		MOV A, M
		OUT 00H
		POP H		; los valores que pudiese tener no se perderan
		POP PSW
		RET

;--------------------------------
;Rutina de disparo
;--------------------------------
disparo:	PUSH PSW
		PUSH H
		LDA desplaza
		MOV D, A
		LDA bala
		CPI 00H	; para indicar que no hay disparo
		JZ nodisparo
		MVI A, 08H
nodisparo:	STA disparo
		CALL outport
		LDA desplaza
		INR A
		CPI 08H
		JNZ otrocero
		MVI A, 00H
		STA bala
		MVI A, 01H
otrocero:	STA desplaza; ejm si llega a 8 lo pone otra vez en la primera posicion
		POP H
		POP PSW
		RET

;--------------------------------
;Rutina de contar
;--------------------------------
contar: 	PUSH PSW
		INR D		; incrementa D
		MOV A, D
		CPI 0AH	; compara con el 10, para ver si esta entre 0 y 9
		JNZ ponercero	
		MVI D, 00H
ponercero:	MOV A, D
		CALL cnvrt7s
		MOV A, B
		OUT 03H
		POP PSW
		RET

;--------------------------------
;Rutina 7 segmentos
;--------------------------------
cnvrt7s: 	PUSH H	; guarda en la pila cualquier valor que tenga HL
		LXI H, cod7sg; graba la dirección de cod7sg en HL
		ADD L
		MOV L,A
		MOV B, M	; mueve lo que hay en M a B, M tiene la direccion de HL
		POP H
		RET

;--------------------------------
;Rutina que atiende a TRAP
;--------------------------------
.ORG 0024H
		; aqui va la rutina
		RET

;--------------------------------
;Rutina que atiende a RST 7.5
;--------------------------------
.ORG 003CH
		CALL disparo; aqui va la rutina
		RET

;--------------------------------
;Rutina que atiende a RST 6.5
;--------------------------------
.ORG 0034H
		;CALL mostrar; aqui va la rutina
		RET

;--------------------------------
;Rutina que atiende a RST 5.5
;--------------------------------
.ORG 002CH
		CALL mostrar; aqui va la rutina
		RET

;--------------------------------
;Rutina de puerto variable
;--------------------------------
outport: 	PUSH PSW; guarda el valor de A y D
		MOV A, D; mueve el valor del puerto al acumulador
		CPI 00; compara si se quiere hacer un out al puerto 0, si es asi sera 0
		JNZ s1; salta a s1 si el cpi no dio 0
		POP PSW; recupera el valor de A y D
		OUT 00
		JMP regresar

s1:		CPI 01
		JNZ s2
		POP PSW
		OUT 01
		JMP regresar

s2:		CPI 02
		JNZ s3
		POP PSW
		OUT 02
		JMP regresar

s3:		CPI 03
		JNZ s4
		POP PSW
		OUT 03
		JMP regresar

s4:		CPI 04
		JNZ s5
		POP PSW
		OUT 04
		JMP regresar

s5:		CPI 05
		JNZ s6
		POP PSW
		OUT 05
		JMP regresar

s6:		CPI 06
		JNZ s7
		POP PSW
		OUT 06
		JMP regresar

s7:		CPI 07
		POP PSW
		OUT 07
		JMP regresar

regresar: 	RET